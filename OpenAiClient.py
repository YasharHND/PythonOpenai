import json

from dotenv import load_dotenv
from openai import OpenAI

load_dotenv()


def list_models():
    return OpenAI().models.list()


def generate_ideas(prompt):
    response = OpenAI().chat.completions.create(
        model="gpt-3.5-turbo-1106",
        response_format={"type": "json_object"},
        messages=[{
            "role": "system",
            "content": "You are a helpful assistant designed to output JSON."
        }, {
            "role": "user",
            "content": prompt
        }]
    )
    content = json.loads(response.choices[0].message.content)
    _, (_, ideas) = next(enumerate(content.items()))
    return ideas


def generate_image(prompt, size):
    response = OpenAI().images.generate(
        model="dall-e-3",
        prompt=prompt,
        size=size,
        quality="hd",
        n=1
    )
    return response.data[0].url


def generate_image_titles(prompt, count):
    response = OpenAI().chat.completions.create(
        model="gpt-3.5-turbo-1106",
        response_format={"type": "json_object"},
        messages=[{
            "role": "system",
            "content": "You are a helpful assistant designed to output JSON."
        }, {
            "role": "user",
            "content": f"give me {count} simplified cool title{'s' if count > 0 else ''} for an image generated by the following prompt: '{prompt}'"
        }, {
            "role": "user",
            "content": "ignore the image generation hints like style, background type or padding settings, etc. in the title"
        }]
    )
    content = json.loads(response.choices[0].message.content)
    _, (_, titles) = next(enumerate(content.items()))
    return titles
